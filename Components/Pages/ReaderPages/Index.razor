@page "/readers"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using Blazor_lab1.Data
@implements IAsyncDisposable
@inject IDbContextFactory<Blazor_lab1.Data.ApplicationDbContext> DbFactory

<PageTitle>Читатели</PageTitle>

<h1>Читатели</h1>

<p>
    <a href="readers/create">Добавить</a>
</p>

<QuickGrid Class="table" Items="context.Reader">
    <PropertyColumn Title="Фамилия" Property="reader => reader.LastName" />
    <PropertyColumn Title="Имя" Property="reader => reader.FirstName" />
    <PropertyColumn Title="Отчество" Property="reader => reader.MiddleName" />
    <PropertyColumn Title="Дата рождения" Property="reader => reader.BirthDate" />
    <PropertyColumn Title="Адрес" Property="reader => reader.Address" />
    <PropertyColumn Title="Телефон" Property="reader => reader.Phone" />

    <TemplateColumn Context="reader">
        <a href="@($"rentbooks?id={reader.ReaderId}&op=2")">Арендованные книги</a> |
        <a href="@($"readers/edit?readerid={reader.ReaderId}")">Редактировать</a> |
        <a href="@($"readers/details?readerid={reader.ReaderId}")">Подробнее</a> |
        <a href="@($"readers/delete?readerid={reader.ReaderId}")">Удалить</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private ApplicationDbContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
